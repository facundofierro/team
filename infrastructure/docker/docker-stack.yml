version: '3.8'
services:
  # PostgreSQL database for agelum
  postgres:
    image: ${POSTGRES_PGVECTOR_IMAGE:-ghcr.io/facundofierro/postgres-pgvector:latest}
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=agelum
      - POSTGRES_USER=agelum
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      agelum_network:
        aliases:
          - postgres

  # Redis cache for agelum
  redis:
    image: redis:7-alpine
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    volumes:
      - redis_data:/data
    networks:
      agelum_network:
        aliases:
          - redis

  # Add nginx reverse proxy service
  nginx:
    image: nginx:alpine
    deploy:
      replicas: 1
    ports:
      - '80:80'
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf
    networks:
      agelum_network:
        aliases:
          - nginx
    depends_on:
      - agelum
      - remotion

  # Remotion rendering service
  remotion:
    image: ${REMOTION_IMAGE:-ghcr.io/facundofierro/kadiel-learning/remotion-render:latest}
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
    environment:
      - NODE_ENV=production
      # Add any environment variables your remotion service needs
    networks:
      agelum_network:
        aliases:
          - remotion

  agelum:
    image: localhost:5000/agelum:latest
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
    environment:
      - NODE_ENV=production
      - PG_PASSWORD=${PG_PASSWORD}
      - POSTGRES_URL=postgresql://agelum:${PG_PASSWORD}@postgres:5432/agelum
      - REDIS_URL=redis://redis:6379
      # Add other env vars here, or use secrets/configs
    networks:
      agelum_network:
        aliases:
          - agelum
    depends_on:
      - postgres
      - redis

  # DISABLED: Browser Service
  # browser-service:
  #   image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/browser-service:latest
  #   deploy:
  #     replicas: 1
  #     update_config:
  #       parallelism: 1
  #       delay: 10s
  #       order: start-first
  #     rollback_config:
  #       parallelism: 1
  #       delay: 10s
  #   environment:
  #     - NODE_ENV=production
  #   ports:
  #     - '4000:4000'
  #   networks:
  #     - agelum_network

configs:
  nginx_config:
    external: true
    name: ${NGINX_CONFIG_NAME:-agelum_nginx_config_v1}

volumes:
  postgres_data:
  redis_data:

networks:
  agelum_network:
    driver: overlay
