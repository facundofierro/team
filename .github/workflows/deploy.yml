name: Deploy to Self-Hosted Server

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_redeploy:
        description: 'Force redeploy infrastructure (ignores existing services)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

jobs:
  prepare-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
    steps:
      - name: Set commit SHA as output
        id: set_tag
        run: echo "tag=${GITHUB_SHA}" >> $GITHUB_OUTPUT

  build-and-push:
    runs-on: ubuntu-latest
    needs: prepare-tag
    outputs:
      tag: ${{ needs.prepare-tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/teamhub/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/teamhub:latest
            ghcr.io/${{ github.repository }}/teamhub:${{ needs.prepare-tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: self-hosted
    needs: build-and-push
    steps:
      - name: Checkout required files
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            infrastructure/
          sparse-checkout-cone-mode: false

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy application stack
        env:
          SUDO_PASSWORD: ${{ secrets.SUDO }}
        run: |
          chmod +x infrastructure/scripts/deploy-application.sh
          export PG_PASSWORD="${{ secrets.PG_PASSWORD }}"
          export NEXTCLOUD_ADMIN_PASSWORD="${{ secrets.NEXTCLOUD_ADMIN_PASSWORD }}"
          export NEXTCLOUD_DB_PASSWORD="${{ secrets.NEXTCLOUD_DB_PASSWORD }}"
          export CONTAINER_REGISTRY="ghcr.io/${{ github.repository }}"
          export FORCE_REDEPLOY="${{ github.event.inputs.force_redeploy || 'false' }}"

          infrastructure/scripts/deploy-application.sh ${{ needs.build-and-push.outputs.tag }}

  cleanup-old-images:
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    steps:
      - name: Delete old container images
        uses: actions/delete-package-versions@v5
        with:
          package-name: 'teamhub'
          package-type: 'container'
          min-versions-to-keep: 2
          delete-only-untagged-versions: false
