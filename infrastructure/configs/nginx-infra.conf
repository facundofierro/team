events {
    worker_connections 1024;
}

http {
    upstream registry {
        server registry:5000;
    }

    # HTTP server (redirect registry to HTTPS)
    server {
        listen 80;
        listen [::]:80;
        server_name _;

        # Default response for root path during infrastructure phase
        location = / {
            return 200 'Infrastructure services running. Registry available at /v2/ (HTTPS required)\n';
            add_header Content-Type text/plain;
        }

        # Redirect registry requests to HTTPS
        location /v2/ {
            return 301 https://$host$request_uri;
        }

        # Health check endpoint
        location /health {
            return 200 'OK\n';
            add_header Content-Type text/plain;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name _;

        # SSL configuration with self-signed certificate
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;

        # Default response for root path during infrastructure phase
        location = / {
            return 200 'Infrastructure services running. Registry available at /v2/\n';
            add_header Content-Type text/plain;
        }

        # Docker registry (HTTPS required for external access)
        location /v2/ {
            proxy_pass http://registry;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;

            # Docker registry specific headers
            proxy_set_header X-Forwarded-Host $host;
            proxy_buffering off;
            client_max_body_size 1G;

            # Optimize for tunnel connections
            proxy_request_buffering off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # Timeouts for better error handling
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

            # Chunked transfer encoding
            chunked_transfer_encoding on;
        }

        # Health check endpoint
        location /health {
            return 200 'OK\n';
            add_header Content-Type text/plain;
        }
    }
}
