events {
    worker_connections 1024;
}

http {
    upstream registry {
        server registry:5000;
    }

    # Single HTTPS server block - Pinggy forwards HTTPS traffic to this port
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name _;

        # SSL configuration with self-signed certificate
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;

        # Docker registry - optimized for large uploads
        location /v2/ {
            proxy_pass http://registry;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;

            # Docker registry specific headers (critical for registry)
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header Proxy "";

            # Disable all buffering for Docker registry
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;

            # Increase body size limits significantly
            client_max_body_size 0;  # Unlimited
            client_body_buffer_size 128k;

            # Use HTTP/1.1 for better compatibility
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # Increase timeouts significantly for large uploads
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            proxy_next_upstream_timeout 0;
            proxy_next_upstream_tries 0;

            # Enable chunked transfer encoding
            chunked_transfer_encoding on;

            # Prevent nginx from adding additional headers that might interfere
            proxy_pass_request_headers on;
            proxy_intercept_errors off;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Default location for any other requests
        location / {
            return 404 "Not found\n";
            add_header Content-Type text/plain;
        }
    }
}
